const bank = {
  false:
  {
    Q: {
      keyCode: 81,
      name: 'Heater 1',
      url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-1.mp3'
    },
    W: {
      keyCode: 87,
      name: 'Heater 2',
      url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-2.mp3'
    },
    E: {
      keyCode: 69,
      name: 'Heater 3',
      url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-3.mp3'
    },
    A: {
      keyCode: 65,
      name: 'Heater 4',
      url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-4_1.mp3'
    },
    S: {
      keyCode: 83,
      name: 'Clap',
      url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-6.mp3'
    },
    D: {
      keyCode: 68,
      name: 'Open HH',
      url: 'https://s3.amazonaws.com/freecodecamp/drums/Dsc_Oh.mp3'
    },
    Z: {
      keyCode: 90,
      name: "Kick n'Hat",
      url: 'https://s3.amazonaws.com/freecodecamp/drums/Kick_n_Hat.mp3'
    },
    X: {
      keyCode: 88,
      name: 'Kick',
      url: 'https://s3.amazonaws.com/freecodecamp/drums/RP4_KICK_1.mp3'
    },
    C: {
      keyCode: 67,
      name: 'Closed HH',
      url: 'https://s3.amazonaws.com/freecodecamp/drums/Cev_H2.mp3'
    }
  },
  true:
  {
    Q: {
      keyCode: 81,
      name: 'Chord 1',
      url: 'https://s3.amazonaws.com/freecodecamp/drums/Chord_1.mp3'
    }, 
    W: {
      keyCode: 87,
      name: 'Chord 2',
      url: 'https://s3.amazonaws.com/freecodecamp/drums/Chord_2.mp3'
    },
    E: {
      keyCode: 69,
      name: 'Chord 3',
      url: 'https://s3.amazonaws.com/freecodecamp/drums/Chord_3.mp3'
    },
    A: {
      keyCode: 65,
      name: 'Shaker',
      url: 'https://s3.amazonaws.com/freecodecamp/drums/Give_us_a_light.mp3'
    },
    S: {
      keyCode: 83,
      name: 'Open HH',
      url: 'https://s3.amazonaws.com/freecodecamp/drums/Dry_Ohh.mp3'
    },
    D: {
      keyCode: 68,
      name: 'Closed HH',
      url: 'https://s3.amazonaws.com/freecodecamp/drums/Bld_H1.mp3'
    },
    Z: {
      keyCode: 90,
      name: 'Punchy Kick',
      url: 'https://s3.amazonaws.com/freecodecamp/drums/punchy_kick_1.mp3'
    },
    X: {
      keyCode: 88,
      name: 'Side Stick',
      url: 'https://s3.amazonaws.com/freecodecamp/drums/side_stick_1.mp3'
    },
    C: {
      keyCode: 67,
      name: 'Snare',
      url: 'https://s3.amazonaws.com/freecodecamp/drums/Brk_Snr.mp3'
    }
  }
};

const keyCode = {81: 'Q', 87: 'W', 69: 'E', 65: 'A', 83: 'S', 68: 'D', 90: 'Z', 88: 'X', 67: 'C'};

class App extends React.Component {
  constructor(props) {
    super(props);
  }

  render() {
    return (
      <div>
        <DrumMachine />
        <Author />
      </div>
    );
  }
}

class DrumMachine extends React.Component {
  constructor(props) {
    super(props);
    this.state = { power: true, 
                  bank: false, 
                  volume: 50,
                  display: 'Power On',
                  bg: {background: 'grey'},
                  bgDefault: {background: 'grey'},
                  key: '',
                  url: ''};
    
    this.power = this.power.bind(this);
    this.bank = this.bank.bind(this);
    this.volume = this.volume.bind(this);
    this.drumPad = this.drumPad.bind(this);
    this.changeBG = this.changeBG.bind(this);
    this.playSound = this.playSound.bind(this);
    this.handleKeyPress = this.handleKeyPress.bind(this);
  }
  
  componentDidMount() {
    document.addEventListener('keydown', this.handleKeyPress);
  }
  componentWillUnmount() {
    document.removeEventListener('keydown', this.handleKeyPress);
  }
  
  handleKeyPress(e) {
    if (keyCode[e.keyCode] != undefined) {
      console.log("aaaa:"+keyCode[e.keyCode]);
      this.playSound(keyCode[e.keyCode]);
    }
  }
  
  drumPad(e) {
    let key = e.target.getAttribute('value');
    this.playSound(key);
  }
  
  playSound(key) {
    if(this.state.power === true) {
      let item = bank[this.state.bank];
      
      this.setState({ 
        bg: {background: 'orange'}, 
        key: key,
        display: bank[this.state.bank][key].name,
        url: bank[this.state.bank][key].url });
      
      this.player = document.getElementById(key);
      this.player.currentTime = 0;
      this.player.play();

      setTimeout(() => this.changeBG(), 100); 
    }
  }
  
  changeBG() {
    this.setState({ bg: {background: 'grey'} });
  }

  power() {
    if (this.state.power === true) {
      this.setState({ power: false, display: 'Power Off' });
    } else {
      this.setState({ power: true, display: 'Power On' });
    }
  }
  
  bank() {
    if (this.state.bank === true) {
      this.setState({ bank: false, display: 'Heater Kit' });
    } else {
      this.setState({ bank: true, display: 'Smooth Piano Kit' });
    }
  }
  
  volume(e) {
    this.setState({ volume: e.target.value, display: 'Volume: ' + e.target.value });
    this.players = document.getElementsByClassName("clip");
    this.players.volume = e.target.value / 100;
  }
  
  
  
  render() {
    return (
      <div id="drum-machine">
        <div className="logo">
          <i className="fa fa-free-code-camp"></i> FCC
        </div>
        <div className="pad-bank">
          <div id="item1" className="drum-pad item1" onClick={this.drumPad} value="Q" style={this.state.key=='Q' ? this.state.bg : this.state.bgDefault}>
            <audio className='clip' id="Q" src={bank[this.state.bank]['Q'].url} volume={this.state.volume / 100}></audio>
            Q
          </div>
          <div id="item2" className="drum-pad item2" onClick={this.drumPad} value="W" style={this.state.key=='W' ? this.state.bg : this.state.bgDefault}>
            <audio className='clip' id="W" src={bank[this.state.bank]['W'].url} volume={this.state.volume / 100}></audio>
            W
          </div>
          <div id="item3" className="drum-pad item3" onClick={this.drumPad} value="E" style={this.state.key=='E' ? this.state.bg : this.state.bgDefault}>
            <audio className='clip' id="E" src={bank[this.state.bank]['E'].url} volume={this.state.volume / 100}></audio>
            E
          </div>
          <div id="item4" className="drum-pad item4" onClick={this.drumPad} value="A" style={this.state.key=='A' ? this.state.bg : this.state.bgDefault}>
            <audio className='clip' id="A" src={bank[this.state.bank]['A'].url} volume={this.state.volume / 100}></audio>
            A
          </div>
          <div id="item5" className="drum-pad item5" onClick={this.drumPad} value="S" style={this.state.key=='S' ? this.state.bg : this.state.bgDefault}>
            <audio className='clip' id="S" src={bank[this.state.bank]['S'].url} volume={this.state.volume / 100}></audio>
            S
          </div>
          <div id="item6" className="drum-pad item6" onClick={this.drumPad} value="D" style={this.state.key=='D' ? this.state.bg : this.state.bgDefault}>
            <audio className='clip' id="D" src={bank[this.state.bank]['D'].url} volume={this.state.volume / 100}></audio>
            D
          </div>
          <div id="item7" className="drum-pad item7" onClick={this.drumPad} value="Z" style={this.state.key=='Z' ? this.state.bg : this.state.bgDefault}>
            <audio className='clip' id="Z" src={bank[this.state.bank]['Z'].url} volume={this.state.volume / 100}></audio>
            Z
          </div>
          <div  id="item8" className="drum-pad item8" onClick={this.drumPad} value="X" style={this.state.key=='X' ? this.state.bg : this.state.bgDefault}>
            <audio className='clip' id="X" src={bank[this.state.bank]['X'].url} volume={this.state.volume / 100}></audio>
            X
          </div>
          <div  id="item9" className="drum-pad item9" onClick={this.drumPad} value="C" style={this.state.key=='C' ? this.state.bg : this.state.bgDefault}>
            <audio className='clip' id="C" src={bank[this.state.bank]['C'].url} volume={this.state.volume / 100}></audio>
            C
          </div>
        </div>
        <div className="control">
          <div className="switchButton">
            Power<br />
            <label className="switch">
              <input type="checkbox" checked={this.state.power} onClick={this.power} onChange={()=>{}} />
              <span className="slider"></span>
            </label>
          </div>
          <div id="display">{this.state.display}</div>
          <div>
            <input type="range" min="0" max="100" value={this.state.volume} step="1" disabled={!this.state.power} className="slider1" onChange={this.volume} />
          </div>
          <div className="switchButton">
            Bank<br />
            <label className="switch">
              <input type="checkbox" disabled={!this.state.power} onClick={this.bank} onChange={()=>{}} />
              <span className="slider"></span>
            </label>
          </div>
        </div>
      </div>
    );
  }
}

class Author extends React.Component {
  render() {
    return (
      <div className="author">
        Designed and Coded By<br />
        <a target="_blank" href="https://codepen.io/dashzeveg">Dashzeveg</a>
      </div>
    );
  }
}

ReactDOM.render(<App />, document.getElementById('app'));

/*
$(document).ready(function(){
  $('#app').click(function() {
    $(this).css('color', 'red');
  });
});
*/